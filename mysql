-- ROLES
SHOW GRANTS FOR 'username';
SHOW GRANTS FOR 'username' USING 'role';
-- USERS
SELECT user FROM mysql.user;
SELECT current_user;
SELECT current_role();

-- DROP ROLE IF EXISTS 'superadmin';
-- DROP USER IF EXISTS 'brgy_administrator';

DROP ROLE IF EXISTS 'captain';
DROP ROLE IF EXISTS 'secretary';
DROP ROLE IF EXISTS 'resident_encoder';
DROP ROLE IF EXISTS 'resident_admin';
DROP ROLE IF EXISTS 'complaint_encoder';
DROP ROLE IF EXISTS 'complaint_admin';

DROP USER IF EXISTS 'brgy_captain';
DROP USER IF EXISTS 'brgy_secretary';
DROP USER IF EXISTS 'clerk_resident_encoder';
DROP USER IF EXISTS 'clerk_resident_admin';
DROP USER IF EXISTS 'clerk_complaint_encoder';
DROP USER IF EXISTS 'clerk_complaint_admin';


-- TRIGGERS
-- To view the triggers defined on a specific table in MySQL
SHOW TRIGGERS FROM database_name LIKE 'table_name';

SELECT TRIGGER_NAME, EVENT_OBJECT_TABLE, ACTION_TIMING, EVENT_MANIPULATION
FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA = 'complaintsc';
DROP TRIGGER IF EXISTS before_resident_delete;
DROP TRIGGER IF EXISTS before_complaint_delete;
DROP TRIGGER IF EXISTS before_resident_delete;

--VIEWS 

-- View the existing views in the database:
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';

-- View the definition of a specific view
SHOW CREATE VIEW view_name;

DROP VIEW view_name;

-- FUNCTIONS
SHOW FUNCTION STATUS WHERE Db = 'complaintsc';

SELECT function_name(arguments) AS result FROM your_table;
-- example
SELECT calculate_age(date_of_birth) AS age FROM resident;

DROP FUNCTION IF EXISTS function_name;

-- STORED PROCEDURE

call storedProcedureName(Param1, Param2, ....) - To use the stored procedure

SELECT ROUTINE_NAME, ROUTINE_TYPE
FROM information_schema.ROUTINES
WHERE ROUTINE_SCHEMA = 'complaintsc';

DROP PROCEDURE [IF EXISTS] procedure_name;






